/openjdk_orig/openjdk/hotspot/src/share/vm/oops/method.cpp:Method::print_short_name ():1375

/openjdk_orig/openjdk/hotspot/src/share/vm/compiler/compileBroker.cpp:CompileTask::print_compilation_impl

/openjdk_orig/openjdk/hotspot/src/share/vm/compiler/compileBroker.cpp:CompileBroker::invoke_compiler_on_method 

/openjdk_orig/openjdk/hotspot/src/share/vm/compiler/compileBroker.cpp:CompileBroker::compiler_thread_loop

Setting main_thread in /openjdk_orig/openjdk/hotspot/src/share/vm/runtime/thread.cpp

/openjdk_orig/openjdk/hotspot/src/share/vm/oops/method.hpp::invocation_count();
/openjdk_orig/openjdk/hotspot/src/share/vm/oops/method.hpp::backedge_count();

void ClassLoader::compile_the_world() describes a similar BulkCompile system although with no optimization.

Klass* SystemDictionary::resolve_or_null resolves the class name
void ClassLoader::compile_the_world_in(char* name, Handle loader, TRAPS)  describes how to get a method from string and compile it.

share/vm/ci/ciReplay.cpp is the compiler replay system

prims/jvm.cpp/JVM_ENTRY(void, JVM_StartThread(JNIEnv* env, jobject jthread))
